/*
 * Copyleft 2015 Red Hat, Inc. and/or its affiliates
 * and other contributors as indicated by the @author tags.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package gr.uop.intermittent.faults.intermittentfaultstest; import org.jboss.metrics.javase.automatedmetricsjavaseapi.JbossAutomatedJavaSeMetricsDbStore; import gr.uop.intermittentfaults.intermmittentfaultsutils.GlobalParams;

import java.util.Random;

/**
 *
 * @author Panagiotis Sotiropoulos
 */
public class TestThreads extends Thread {

    private Thread t;
    private String threadName;
    TestClass metricsApiSeTestClass;
    
    private String deploymentName = "myTestDeployment";
    private String deploymentName2 = "myTestDeployment2";

   public  TestThreads(String name, TestClass metricsApiSeTestClass) {
        threadName = name; if (GlobalParams.getGlobalCount().get() < GlobalParams.getCountUntil()) try {JbossAutomatedJavaSeMetricsDbStore.metricsDbStore("", new Object[]{GlobalParams.globalCountGetAndIncrement(),"TestThreads","TestThreads","F:\\Netbeans\\IntermittentFaults\\IntermittentFaultsTest\\src\\main\\java\\gr\\uop\\intermittent\\faults\\intermittentfaultstest\\TestThreads.java","35",Thread.currentThread().getName()}, "intermittentFaultsReplayGroup", "statement_1", new String[]{"StoreDBMetric","serialCount","className","methodName","classPath","line","thread"},"default"); GlobalParams.SetDone(); GlobalParams.AddBlockPoints();} catch (Exception ex2) {ex2.printStackTrace();}
        this.metricsApiSeTestClass = metricsApiSeTestClass; if (GlobalParams.getGlobalCount().get() < GlobalParams.getCountUntil()) try {JbossAutomatedJavaSeMetricsDbStore.metricsDbStore("", new Object[]{GlobalParams.globalCountGetAndIncrement(),"TestThreads","TestThreads","F:\\Netbeans\\IntermittentFaults\\IntermittentFaultsTest\\src\\main\\java\\gr\\uop\\intermittent\\faults\\intermittentfaultstest\\TestThreads.java","36",Thread.currentThread().getName()}, "intermittentFaultsReplayGroup", "statement_1", new String[]{"StoreDBMetric","serialCount","className","methodName","classPath","line","thread"},"default"); GlobalParams.SetDone(); GlobalParams.AddBlockPoints();} catch (Exception ex2) {ex2.printStackTrace();}
        System.out.println("Creating " + threadName); if (GlobalParams.getGlobalCount().get() < GlobalParams.getCountUntil()) try {JbossAutomatedJavaSeMetricsDbStore.metricsDbStore("", new Object[]{GlobalParams.globalCountGetAndIncrement(),"TestThreads","TestThreads","F:\\Netbeans\\IntermittentFaults\\IntermittentFaultsTest\\src\\main\\java\\gr\\uop\\intermittent\\faults\\intermittentfaultstest\\TestThreads.java","37",Thread.currentThread().getName()}, "intermittentFaultsReplayGroup", "statement_1", new String[]{"StoreDBMetric","serialCount","className","methodName","classPath","line","thread"},"default"); GlobalParams.SetDone(); GlobalParams.AddBlockPoints();} catch (Exception ex2) {ex2.printStackTrace();}
    }

    public void run() {
 { if (GlobalParams.getGlobalCount().get() < GlobalParams.getCountUntil()) try {GlobalParams.AddBlockPoints();} catch (Exception ex2) {ex2.printStackTrace();}        System.out.println("Running " + threadName); if (GlobalParams.getGlobalCount().get() < GlobalParams.getCountUntil()) try {JbossAutomatedJavaSeMetricsDbStore.metricsDbStore("", new Object[]{GlobalParams.globalCountGetAndIncrement(),"TestThreads","run","F:\\Netbeans\\IntermittentFaults\\IntermittentFaultsTest\\src\\main\\java\\gr\\uop\\intermittent\\faults\\intermittentfaultstest\\TestThreads.java","41",Thread.currentThread().getName()}, "intermittentFaultsReplayGroup", "statement_1", new String[]{"StoreDBMetric","serialCount","className","methodName","classPath","line","thread"},"default"); GlobalParams.SetDone(); GlobalParams.AddBlockPoints();} catch (Exception ex2) {ex2.printStackTrace();}}
        try { if (GlobalParams.getGlobalCount().get() < GlobalParams.getCountUntil()) try {JbossAutomatedJavaSeMetricsDbStore.metricsDbStore("", new Object[]{GlobalParams.globalCountGetAndIncrement(),"TestThreads","run","F:\\Netbeans\\IntermittentFaults\\IntermittentFaultsTest\\src\\main\\java\\gr\\uop\\intermittent\\faults\\intermittentfaultstest\\TestThreads.java","42",Thread.currentThread().getName()}, "intermittentFaultsReplayGroup", "statement_1", new String[]{"StoreDBMetric","serialCount","className","methodName","classPath","line","thread"},"default"); GlobalParams.SetDone(); GlobalParams.AddBlockPoints();} catch (Exception ex2) {ex2.printStackTrace();}
            System.out.println("Thread: " + threadName); if (GlobalParams.getGlobalCount().get() < GlobalParams.getCountUntil()) try {JbossAutomatedJavaSeMetricsDbStore.metricsDbStore("", new Object[]{GlobalParams.globalCountGetAndIncrement(),"TestThreads","run","F:\\Netbeans\\IntermittentFaults\\IntermittentFaultsTest\\src\\main\\java\\gr\\uop\\intermittent\\faults\\intermittentfaultstest\\TestThreads.java","43",Thread.currentThread().getName()}, "intermittentFaultsReplayGroup", "statement_1", new String[]{"StoreDBMetric","serialCount","className","methodName","classPath","line","thread"},"default"); GlobalParams.SetDone(); GlobalParams.AddBlockPoints();} catch (Exception ex2) {ex2.printStackTrace();}
             if (GlobalParams.getGlobalCount().get() < GlobalParams.getCountUntil()) try {JbossAutomatedJavaSeMetricsDbStore.metricsDbStore("", new Object[]{GlobalParams.globalCountGetAndIncrement(),"TestThreads","run","F:\\Netbeans\\IntermittentFaults\\IntermittentFaultsTest\\src\\main\\java\\gr\\uop\\intermittent\\faults\\intermittentfaultstest\\TestThreads.java","44",Thread.currentThread().getName()}, "intermittentFaultsReplayGroup", "statement_1", new String[]{"StoreDBMetric","serialCount","className","methodName","classPath","line","thread"},"default"); GlobalParams.SetDone(); GlobalParams.AddBlockPoints();} catch (Exception ex2) {ex2.printStackTrace();}
            Random rand = new Random(System.currentTimeMillis()); if (GlobalParams.getGlobalCount().get() < GlobalParams.getCountUntil()) try {JbossAutomatedJavaSeMetricsDbStore.metricsDbStore("", new Object[]{GlobalParams.globalCountGetAndIncrement(),"TestThreads","run","F:\\Netbeans\\IntermittentFaults\\IntermittentFaultsTest\\src\\main\\java\\gr\\uop\\intermittent\\faults\\intermittentfaultstest\\TestThreads.java","45",Thread.currentThread().getName()}, "intermittentFaultsReplayGroup", "statement_1", new String[]{"StoreDBMetric","serialCount","className","methodName","classPath","line","thread"},"default"); GlobalParams.SetDone(); GlobalParams.AddBlockPoints();} catch (Exception ex2) {ex2.printStackTrace();}

            int  n = rand.nextInt(450) + 1; if (GlobalParams.getGlobalCount().get() < GlobalParams.getCountUntil()) try {JbossAutomatedJavaSeMetricsDbStore.metricsDbStore("", new Object[]{GlobalParams.globalCountGetAndIncrement(),"TestThreads","run","F:\\Netbeans\\IntermittentFaults\\IntermittentFaultsTest\\src\\main\\java\\gr\\uop\\intermittent\\faults\\intermittentfaultstest\\TestThreads.java","47",Thread.currentThread().getName()}, "intermittentFaultsReplayGroup", "statement_1", new String[]{"StoreDBMetric","serialCount","className","methodName","classPath","line","thread"},"default"); GlobalParams.SetDone(); GlobalParams.AddBlockPoints();} catch (Exception ex2) {ex2.printStackTrace();}
             if (GlobalParams.getGlobalCount().get() < GlobalParams.getCountUntil()) try {JbossAutomatedJavaSeMetricsDbStore.metricsDbStore("", new Object[]{GlobalParams.globalCountGetAndIncrement(),"TestThreads","run","F:\\Netbeans\\IntermittentFaults\\IntermittentFaultsTest\\src\\main\\java\\gr\\uop\\intermittent\\faults\\intermittentfaultstest\\TestThreads.java","48",Thread.currentThread().getName()}, "intermittentFaultsReplayGroup", "statement_1", new String[]{"StoreDBMetric","serialCount","className","methodName","classPath","line","thread"},"default"); GlobalParams.SetDone(); GlobalParams.AddBlockPoints();} catch (Exception ex2) {ex2.printStackTrace();}
            Thread.sleep(n); if (GlobalParams.getGlobalCount().get() < GlobalParams.getCountUntil()) try {JbossAutomatedJavaSeMetricsDbStore.metricsDbStore("", new Object[]{GlobalParams.globalCountGetAndIncrement(),"TestThreads","run","F:\\Netbeans\\IntermittentFaults\\IntermittentFaultsTest\\src\\main\\java\\gr\\uop\\intermittent\\faults\\intermittentfaultstest\\TestThreads.java","49",Thread.currentThread().getName()}, "intermittentFaultsReplayGroup", "statement_1", new String[]{"StoreDBMetric","serialCount","className","methodName","classPath","line","thread"},"default"); GlobalParams.SetDone(); GlobalParams.AddBlockPoints();} catch (Exception ex2) {ex2.printStackTrace();}
             if (GlobalParams.getGlobalCount().get() < GlobalParams.getCountUntil()) try {JbossAutomatedJavaSeMetricsDbStore.metricsDbStore("", new Object[]{GlobalParams.globalCountGetAndIncrement(),"TestThreads","run","F:\\Netbeans\\IntermittentFaults\\IntermittentFaultsTest\\src\\main\\java\\gr\\uop\\intermittent\\faults\\intermittentfaultstest\\TestThreads.java","50",Thread.currentThread().getName()}, "intermittentFaultsReplayGroup", "statement_1", new String[]{"StoreDBMetric","serialCount","className","methodName","classPath","line","thread"},"default"); GlobalParams.SetDone(); GlobalParams.AddBlockPoints();} catch (Exception ex2) {ex2.printStackTrace();}
            metricsApiSeTestClass.countMethod(); if (GlobalParams.getGlobalCount().get() < GlobalParams.getCountUntil()) try {JbossAutomatedJavaSeMetricsDbStore.metricsDbStore("", new Object[]{GlobalParams.globalCountGetAndIncrement(),"TestThreads","run","F:\\Netbeans\\IntermittentFaults\\IntermittentFaultsTest\\src\\main\\java\\gr\\uop\\intermittent\\faults\\intermittentfaultstest\\TestThreads.java","51",Thread.currentThread().getName()}, "intermittentFaultsReplayGroup", "statement_1", new String[]{"StoreDBMetric","serialCount","className","methodName","classPath","line","thread"},"default"); GlobalParams.SetDone(); GlobalParams.AddBlockPoints();} catch (Exception ex2) {ex2.printStackTrace();}
             if (GlobalParams.getGlobalCount().get() < GlobalParams.getCountUntil()) try {JbossAutomatedJavaSeMetricsDbStore.metricsDbStore("", new Object[]{GlobalParams.globalCountGetAndIncrement(),"TestThreads","run","F:\\Netbeans\\IntermittentFaults\\IntermittentFaultsTest\\src\\main\\java\\gr\\uop\\intermittent\\faults\\intermittentfaultstest\\TestThreads.java","52",Thread.currentThread().getName()}, "intermittentFaultsReplayGroup", "statement_1", new String[]{"StoreDBMetric","serialCount","className","methodName","classPath","line","thread"},"default"); GlobalParams.SetDone(); GlobalParams.AddBlockPoints();} catch (Exception ex2) {ex2.printStackTrace();}
        } catch (Exception e) { if (GlobalParams.getGlobalCount().get() < GlobalParams.getCountUntil()) try {JbossAutomatedJavaSeMetricsDbStore.metricsDbStore("", new Object[]{GlobalParams.globalCountGetAndIncrement(),"TestThreads","run","F:\\Netbeans\\IntermittentFaults\\IntermittentFaultsTest\\src\\main\\java\\gr\\uop\\intermittent\\faults\\intermittentfaultstest\\TestThreads.java","53",Thread.currentThread().getName()}, "intermittentFaultsReplayGroup", "statement_1", new String[]{"StoreDBMetric","serialCount","className","methodName","classPath","line","thread"},"default"); GlobalParams.SetDone(); GlobalParams.AddBlockPoints();} catch (Exception ex2) {ex2.printStackTrace();}
            e.printStackTrace(); if (GlobalParams.getGlobalCount().get() < GlobalParams.getCountUntil()) try {JbossAutomatedJavaSeMetricsDbStore.metricsDbStore("", new Object[]{GlobalParams.globalCountGetAndIncrement(),"TestThreads","run","F:\\Netbeans\\IntermittentFaults\\IntermittentFaultsTest\\src\\main\\java\\gr\\uop\\intermittent\\faults\\intermittentfaultstest\\TestThreads.java","54",Thread.currentThread().getName()}, "intermittentFaultsReplayGroup", "statement_1", new String[]{"StoreDBMetric","serialCount","className","methodName","classPath","line","thread"},"default"); GlobalParams.SetDone(); GlobalParams.AddBlockPoints();} catch (Exception ex2) {ex2.printStackTrace();}
        }
        System.out.println("Thread " + threadName + " exiting."); if (GlobalParams.getGlobalCount().get() < GlobalParams.getCountUntil()) try {JbossAutomatedJavaSeMetricsDbStore.metricsDbStore("", new Object[]{GlobalParams.globalCountGetAndIncrement(),"TestThreads","run","F:\\Netbeans\\IntermittentFaults\\IntermittentFaultsTest\\src\\main\\java\\gr\\uop\\intermittent\\faults\\intermittentfaultstest\\TestThreads.java","56",Thread.currentThread().getName()}, "intermittentFaultsReplayGroup", "statement_1", new String[]{"StoreDBMetric","serialCount","className","methodName","classPath","line","thread"},"default"); GlobalParams.SetDone(); GlobalParams.AddBlockPoints();} catch (Exception ex2) {ex2.printStackTrace();}
    }

    public void start() {
        System.out.println("Starting " + threadName); if (GlobalParams.getGlobalCount().get() < GlobalParams.getCountUntil()) try {JbossAutomatedJavaSeMetricsDbStore.metricsDbStore("", new Object[]{GlobalParams.globalCountGetAndIncrement(),"TestThreads","start","F:\\Netbeans\\IntermittentFaults\\IntermittentFaultsTest\\src\\main\\java\\gr\\uop\\intermittent\\faults\\intermittentfaultstest\\TestThreads.java","60",Thread.currentThread().getName()}, "intermittentFaultsReplayGroup", "statement_1", new String[]{"StoreDBMetric","serialCount","className","methodName","classPath","line","thread"},"default"); GlobalParams.SetDone(); GlobalParams.AddBlockPoints();} catch (Exception ex2) {ex2.printStackTrace();}
 if (GlobalParams.getGlobalCount().get() < GlobalParams.getCountUntil()) try {JbossAutomatedJavaSeMetricsDbStore.metricsDbStore("", new Object[]{GlobalParams.globalCountGetAndIncrement(),"TestThreads","start","F:\\Netbeans\\IntermittentFaults\\IntermittentFaultsTest\\src\\main\\java\\gr\\uop\\intermittent\\faults\\intermittentfaultstest\\TestThreads.java","61",Thread.currentThread().getName()}, "intermittentFaultsReplayGroup", "statement_1", new String[]{"StoreDBMetric","serialCount","className","methodName","classPath","line","thread"},"default"); GlobalParams.SetDone(); GlobalParams.AddBlockPoints();} catch (Exception ex2) {ex2.printStackTrace();}        if (t == null) {
            t = new Thread(this, threadName); if (GlobalParams.getGlobalCount().get() < GlobalParams.getCountUntil()) try {JbossAutomatedJavaSeMetricsDbStore.metricsDbStore("", new Object[]{GlobalParams.globalCountGetAndIncrement(),"TestThreads","start","F:\\Netbeans\\IntermittentFaults\\IntermittentFaultsTest\\src\\main\\java\\gr\\uop\\intermittent\\faults\\intermittentfaultstest\\TestThreads.java","62",Thread.currentThread().getName()}, "intermittentFaultsReplayGroup", "statement_1", new String[]{"StoreDBMetric","serialCount","className","methodName","classPath","line","thread"},"default"); GlobalParams.SetDone(); GlobalParams.AddBlockPoints();} catch (Exception ex2) {ex2.printStackTrace();}
            t.start(); if (GlobalParams.getGlobalCount().get() < GlobalParams.getCountUntil()) try {JbossAutomatedJavaSeMetricsDbStore.metricsDbStore("", new Object[]{GlobalParams.globalCountGetAndIncrement(),"TestThreads","start","F:\\Netbeans\\IntermittentFaults\\IntermittentFaultsTest\\src\\main\\java\\gr\\uop\\intermittent\\faults\\intermittentfaultstest\\TestThreads.java","63",Thread.currentThread().getName()}, "intermittentFaultsReplayGroup", "statement_1", new String[]{"StoreDBMetric","serialCount","className","methodName","classPath","line","thread"},"default"); GlobalParams.SetDone(); GlobalParams.AddBlockPoints();} catch (Exception ex2) {ex2.printStackTrace();}
        }
    }

    public Thread getT() {
        return t;
    }
    
    
}
